{"version":3,"sources":["Components/List.jsx","App.js","index.js"],"names":["List","suggestionsList","countries","useState","visibleList","setVisibleList","searchValue","setSearchValue","activeSugestion","setActiveSugestion","filteredCountries","filter","country","name","common","toLowerCase","includes","length","className","map","index","onClick","e","target","classList","contains","type","placeholder","value","onChange","onKeyDown","key","props","children","previous","App","setCountries","useEffect","axios","get","then","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAmFeA,MAhFf,YAA8B,IAyCxBC,EAzCUC,EAAa,EAAbA,UACd,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8CJ,mBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAkCMC,EAAoBR,EAAUS,QAAO,SAACC,GAC1C,OAAOA,EAAQC,KAAKC,OAAOC,cAAcC,SAASV,EAAYS,kBA0BhE,OAnBEd,EADES,EAAkBO,OAElB,qBAAKC,UAAWd,EAAc,OAAS,iBAAvC,SACGM,EAAkBS,KAAI,SAACP,EAASQ,GAC/B,OACE,mBAAeF,UAAS,qBAAgBE,IAAUZ,EAAkB,SAAW,IAA/E,SACGI,EAAQC,KAAKC,QADRM,QASd,qBAAKF,UAAWd,EAAc,OAAS,iBAAvC,SACE,mBAAGc,UAAU,aAAb,2CAMJ,sBAAKA,UAAU,MAAMG,QAvDN,SAACC,GACZA,EAAEC,OAAOC,UAAUC,SAAS,QAC9BpB,GAAe,IAqDjB,UACE,uBACEa,UAAU,QACVQ,KAAK,OACLC,YAAY,qBACZC,MAAOtB,EACPuB,SAlEsB,SAACP,GAC3Bf,EAAee,EAAEC,OAAOK,QAkEpBE,UAxDoB,SAACR,GACzBjB,GAAe,GAED,UAAViB,EAAES,KAAmBrB,EAAkBO,SACzCV,EAAeN,EAAgB+B,MAAMC,SAASzB,GAAiBwB,MAAMC,UACrExB,EAAmB,GACnBJ,GAAe,IAIH,YAAViB,EAAES,KAAqBrB,EAAkBO,QAC3CR,GAAmB,SAACyB,GAAD,OAAcA,EAAW,KAIhC,cAAVZ,EAAES,KAAuBrB,EAAkBO,QAC7CR,GAAmB,SAACyB,GAAD,OAAcA,EAAW,MAyC1Cb,QAAS,kBAAMhB,GAAe,MAE/BJ,MCnDQkC,MApBf,WACE,MAAkChC,mBAAS,IAA3C,mBAAOD,EAAP,KAAkBkC,EAAlB,KAYA,OAJAC,qBAAU,WALRC,IAAMC,IAAI,sCAAsCC,MAAK,SAACC,GACpD,OAAOL,EAAaK,EAASC,WAM9B,IAGD,mCACE,cAAC,EAAD,CAAMxC,UAAWA,OCjBvByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.55bd4981.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../index.scss';\r\n\r\nfunction List({ countries }) {\r\n  const [visibleList, setVisibleList] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [activeSugestion, setActiveSugestion] = useState(0);\r\n\r\n  const onChangeSearchInput = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  // убрать список если на инпуте нет фокуса\r\n  const hideList = (e) => {\r\n    if (e.target.classList.contains('app')) {\r\n      setVisibleList(false);\r\n    }\r\n  };\r\n\r\n  const onKeyPressInInput = (e) => {\r\n    setVisibleList(true);\r\n\r\n    if (e.key === 'Enter' && filteredCountries.length) {\r\n      setSearchValue(suggestionsList.props.children[activeSugestion].props.children);\r\n      setActiveSugestion(0);\r\n      setVisibleList(false);\r\n    }\r\n\r\n    // обработка кнопки вверх\r\n    if (e.key === 'ArrowUp' && filteredCountries.length) {\r\n      setActiveSugestion((previous) => previous - 1);\r\n    }\r\n\r\n    // обработка кнопки вниз\r\n    if (e.key === 'ArrowDown' && filteredCountries.length) {\r\n      setActiveSugestion((previous) => previous + 1);\r\n    }\r\n  };\r\n\r\n  // фильтр стран по названию\r\n  const filteredCountries = countries.filter((country) => {\r\n    return country.name.common.toLowerCase().includes(searchValue.toLowerCase());\r\n  });\r\n\r\n  let suggestionsList;\r\n\r\n  // проверка наличия списка после фильтрации\r\n  if (filteredCountries.length) {\r\n    suggestionsList = (\r\n      <div className={visibleList ? 'list' : 'list invisible'}>\r\n        {filteredCountries.map((country, index) => {\r\n          return (\r\n            <p key={index} className={`list__item ${index === activeSugestion ? 'active' : ''}`}>\r\n              {country.name.common}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    suggestionsList = (\r\n      <div className={visibleList ? 'list' : 'list invisible'}>\r\n        <p className='list__item'>Fuck u! (nothing to sugest)</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='app' onClick={hideList}>\r\n      <input\r\n        className='input'\r\n        type='text'\r\n        placeholder='Search the country'\r\n        value={searchValue}\r\n        onChange={onChangeSearchInput}\r\n        onKeyDown={onKeyPressInInput}\r\n        onClick={() => setVisibleList(true)}\r\n      />\r\n      {suggestionsList}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport List from './Components/List';\n\nimport './index.scss';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n\n  const getCountries = () => {\n    axios.get('https://restcountries.com/v3.1/all').then((response) => {\n      return setCountries(response.data);\n    });\n  };\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  return (\n    <>\n      <List countries={countries} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}