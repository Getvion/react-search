{"version":3,"sources":["Components/List.jsx","App.js","index.js"],"names":["List","suggestionsList","countries","useState","visibleList","setVisibleList","searchValue","setSearchValue","activeSugestion","setActiveSugestion","filteredCountries","filter","country","name","common","toLowerCase","includes","paragraphClassName","length","className","map","index","onClick","e","target","classList","contains","type","placeholder","value","onChange","onKeyDown","keyCode","props","children","previous","App","setCountries","useEffect","axios","get","then","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMA2FeA,MAxFf,YAA8B,IA0CxBC,EA1CUC,EAAa,EAAbA,UACd,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8CJ,mBAAS,GAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAmCMC,EAAoBR,EAAUS,QAAO,SAACC,GAC1C,OAAOA,EAAQC,KAAKC,OAAOC,cAAcC,SAASV,EAAYS,kBAI5DE,EAAqB,aA6BzB,OAzBEhB,EADES,EAAkBQ,OAElB,qBAAKC,UAAWf,EAAc,OAAS,iBAAvC,SACGM,EAAkBU,KAAI,SAACR,EAASS,GAO/B,OALEJ,EADEI,IAAUb,EACS,oBAEA,aAIrB,mBAAeW,UAAWF,EAA1B,SACGL,EAAQC,KAAKC,QADRO,QASd,qBAAKF,UAAWf,EAAc,OAAS,iBAAvC,SACE,mBAAGe,UAAU,aAAb,2CAMJ,sBAAKA,UAAU,MAAMG,QA/DN,SAACC,GACZA,EAAEC,OAAOC,UAAUC,SAAS,QAC9BrB,GAAe,IA6DjB,UACE,uBACEc,UAAU,QACVQ,KAAK,OACLC,YAAY,qBACZC,MAAOvB,EACPwB,SA1EsB,SAACP,GAC3BhB,EAAegB,EAAEC,OAAOK,QA0EpBE,UAhEoB,SAACR,GACzBlB,GAAe,GAGG,KAAdkB,EAAES,SAAkBtB,EAAkBQ,SACxCX,EAAeN,EAAgBgC,MAAMC,SAAS1B,GAAiByB,MAAMC,UACrEzB,EAAmB,GACnBJ,GAAe,IAIC,KAAdkB,EAAES,SAAkBtB,EAAkBQ,QACxCT,GAAmB,SAAC0B,GAAD,OAAcA,EAAW,KAI5B,KAAdZ,EAAES,SAAkBtB,EAAkBQ,QACxCT,GAAmB,SAAC0B,GAAD,OAAcA,EAAW,MAgD1Cb,QAAS,kBAAMjB,GAAe,MAE/BJ,MC3DQmC,MApBf,WACE,MAAkCjC,mBAAS,IAA3C,mBAAOD,EAAP,KAAkBmC,EAAlB,KAYA,OAJAC,qBAAU,WALRC,IAAMC,IAAI,sCAAsCC,MAAK,SAACC,GACpD,OAAOL,EAAaK,EAASC,WAM9B,IAGD,mCACE,cAAC,EAAD,CAAMzC,UAAWA,OCjBvB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b3706d57.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../index.scss';\r\n\r\nfunction List({ countries }) {\r\n  const [visibleList, setVisibleList] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [activeSugestion, setActiveSugestion] = useState(0);\r\n\r\n  const onChangeSearchInput = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  // hide list on remove focus from input\r\n  const hideList = (e) => {\r\n    if (e.target.classList.contains('app')) {\r\n      setVisibleList(false);\r\n    }\r\n  };\r\n\r\n  const onKeyPressInInput = (e) => {\r\n    setVisibleList(true);\r\n\r\n    // обработка ентера и проверка на наличие офильтрованного списка\r\n    if (e.keyCode === 13 && filteredCountries.length) {\r\n      setSearchValue(suggestionsList.props.children[activeSugestion].props.children);\r\n      setActiveSugestion(0);\r\n      setVisibleList(false);\r\n    }\r\n\r\n    // обработка кнопки вверх\r\n    if (e.keyCode === 38 && filteredCountries.length) {\r\n      setActiveSugestion((previous) => previous - 1);\r\n    }\r\n\r\n    // обработка кнопки вниз\r\n    if (e.keyCode === 40 && filteredCountries.length) {\r\n      setActiveSugestion((previous) => previous + 1);\r\n    }\r\n  };\r\n\r\n  // фильтр стран по названию\r\n  const filteredCountries = countries.filter((country) => {\r\n    return country.name.common.toLowerCase().includes(searchValue.toLowerCase());\r\n  });\r\n\r\n  let suggestionsList;\r\n  let paragraphClassName = 'list__item';\r\n\r\n  // проверка наличия списка после фильтрации\r\n  if (filteredCountries.length) {\r\n    suggestionsList = (\r\n      <div className={visibleList ? 'list' : 'list invisible'}>\r\n        {filteredCountries.map((country, index) => {\r\n          if (index === activeSugestion) {\r\n            paragraphClassName = 'list__item active';\r\n          } else {\r\n            paragraphClassName = 'list__item';\r\n          }\r\n\r\n          return (\r\n            <p key={index} className={paragraphClassName}>\r\n              {country.name.common}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  } else {\r\n    suggestionsList = (\r\n      <div className={visibleList ? 'list' : 'list invisible'}>\r\n        <p className='list__item'>Fuck u! (nothing to sugest)</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='app' onClick={hideList}>\r\n      <input\r\n        className='input'\r\n        type='text'\r\n        placeholder='Search the country'\r\n        value={searchValue}\r\n        onChange={onChangeSearchInput}\r\n        onKeyDown={onKeyPressInInput}\r\n        onClick={() => setVisibleList(true)}\r\n      />\r\n      {suggestionsList}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nimport List from './Components/List';\n\nimport './index.scss';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n\n  const getCountries = () => {\n    axios.get('https://restcountries.com/v3.1/all').then((response) => {\n      return setCountries(response.data);\n    });\n  };\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  return (\n    <>\n      <List countries={countries} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}